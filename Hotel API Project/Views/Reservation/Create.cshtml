@model DataStructure.Reservation
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor
@{
    ViewData["Title"] = "Create";
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<reference path="~/lib/jquery-validation/dist/jquery.validate.js" />

<h1>Create A Reservation</h1>

<hr />
<script type="text/javascript">
    function createReservation() {
        $(document).ready(function () {
            let url = 'https://localhost:44357/api/Reservation';
            let btnReservationCreate = $('#btnReservationCreate');
            btnReservationCreate.click(function () {
                let guestDropDownList = $('#guestDropDownList');
                let employeeDropDownList = $('#employeeDropDownList');
                let roomDropDownList = $('#roomDropDownList');
                let secondRoomDropDownList = $('#secondRoomDropDownList');
                let thirdRoomDropDownList = $('#thirdRoomDropDownList');
                let guest = {
                    id: Number(guestDropDownList.val())
                };
                let employee = {
                    id: Number(employeeDropDownList.val())
                };
                let roomReservations = [];
                roomReservations[0] = {
                    roomID: Number(roomDropDownList.val())
                }
                //checking if the second dropdownlist's values are different from the other two and also not 0(if the value is 0 then no room is picked)
                if (Number(secondRoomDropDownList.val()) != 0 && Number(secondRoomDropDownList.val()) != Number(roomDropDownList.val())
                    && Number(secondRoomDropDownList.val()) != Number(thirdRoomDropDownList.val())) {
                    roomReservations[1] = {
                        roomID: Number(secondRoomDropDownList.val())
                    }
                }
                //checking if the third dropdownlist's values are different from the other two and also not 0(if the value is 0 then no room is picked)
                if (Number(thirdRoomDropDownList.val()) != 0 && Number(secondRoomDropDownList.val()) != Number(thirdRoomDropDownList.val())
                    && Number(thirdRoomDropDownList.val()) != Number(roomDropDownList.val())) {
                    roomReservations[2] = {
                        roomID: Number(thirdRoomDropDownList.val())
                    }
                }
                let startDate = $('#reservationStartDate').val();
                let endDate = $('#reservationEndDate').val();
                let reservation = {
                    guest: guest,
                    employee: employee,
                    roomReservations: roomReservations,
                    startDate: startDate,
                    endDate: endDate
                };
                $.ajax({
                    url: url,
                    type: 'POST',
                    contentType: 'application/json',
                    accepts: 'json',
                    headers: {
                        "Authorization": 'Bearer ' + "@httpContextAccessor.HttpContext.Request.Cookies["JWTCookie"]",
                        "X-XSRF-TOKEN": $('#XSRFToken').val()
                    },
                    data: JSON.stringify(reservation),
                    success: function (data) {
                        alert('Success, send the data to the create action of the reservation controller. Created Reservation with ID: ' + data);
                        window.location.href = "https://localhost:44357/Reservation/Index";
                    },
                    error: function (data) {
                        alert('One or more validation errors occured! Please check the validation messages!');
                    }
                });
            });

        });
    }

    function getGuests() {
        let urlForGuest = 'https://localhost:44357/api/Guest';
        $.ajax({
            type: 'GET',
            url: urlForGuest,
            contentType: 'application/json',
            headers: {
                "Authorization": 'Bearer ' + "@httpContextAccessor.HttpContext.Request.Cookies["JWTCookie"]"
            },
            success: function (data) {
                let guestDropDownList = $('#guestDropDownList');
                $.each(data, function (index, val) {
                    let optionForGuestDropDownList = $('<option>');
                    optionForGuestDropDownList.attr('value', val.id);
                    optionForGuestDropDownList.append(val.name);
                    optionForGuestDropDownList.append('</option>');
                    guestDropDownList.append(optionForGuestDropDownList);
                });
            }

        });
    }

    function getEmployees() {
        let urlForEmployee = 'https://localhost:44357/api/Employee';
        $.ajax({
            type: 'GET',
            url: urlForEmployee,
            contentType: 'application/json',
            headers: {
                "Authorization": 'Bearer ' + "@httpContextAccessor.HttpContext.Request.Cookies["JWTCookie"]"
            },
            success: function (data) {
                let employeeDropDownList = $('#employeeDropDownList');
                $.each(data, function (index, val) {
                    let optionForEmployeeDropDownList = $('<option>');
                    optionForEmployeeDropDownList.attr('value', val.id);
                    optionForEmployeeDropDownList.append(val.userName);
                    optionForEmployeeDropDownList.append('</option>');
                    employeeDropDownList.append(optionForEmployeeDropDownList);
                });
            }

        });
    }

    function getRooms() {
        let urlForRooms = 'https://localhost:44357/api/Room';
        $.ajax({
            type: 'GET',
            url: urlForRooms,
            contentType: 'application/json',
            headers: {
                "Authorization": 'Bearer ' + "@httpContextAccessor.HttpContext.Request.Cookies["JWTCookie"]"
            },
            success: function (data) {
                let roomDropDownList = $('#roomDropDownList');
                let secondRoomDropDownList = $('#secondRoomDropDownList');
                let thirdRoomDropDownList = $('#thirdRoomDropDownList');
                $.each(data, function (index, val) {
                    let optionForRoomDropDownList = $('<option>');
                    optionForRoomDropDownList.attr('value', val.id);
                    optionForRoomDropDownList.append(val.number);
                    optionForRoomDropDownList.append('</option>');
                    optionForRoomDropDownList.appendTo([roomDropDownList, secondRoomDropDownList, thirdRoomDropDownList]);
                });
            }

        });
    }

    //ensuring that the end date is greater than the start date(must add class startDate at the reservation start date and class endDate at the reservation end date)
    function ensureEndDateIsGreaterThanStartDate() {
        //add startDate class on the reservation start Date input
        //add endDate class on the reservation end Date input
        $.validator.addMethod("endDate", function (value, element) {
            let startDate = $('.startDate').val();
            return Date.parse(startDate) <= Date.parse(value) || value == "";
        }, "End date must be after start date");
    }

    function makeRoomDropDownsEnabledIfValueNotNull() {
        $(document).ready(function () {
            let roomDropDownList = $('#roomDropDownList');
            let secondRoomDropDownList = $('#secondRoomDropDownList');
            let thirdRoomDropDownList = $('#thirdRoomDropDownList');
            secondRoomDropDownList.attr('disabled', true);
            thirdRoomDropDownList.attr('disabled', true);
            roomDropDownList.on('change', function () {
                secondRoomDropDownList.attr('disabled', false);
            });
            secondRoomDropDownList.on('change', function () {
                thirdRoomDropDownList.attr('disabled', false);
            });
        });
    }
</script>

@{
    await Html.RenderPartialAsync("_JWTAuthenticationCheck");
}

<script>
    getGuests();
    getEmployees();
    getRooms();
    ensureEndDateIsGreaterThanStartDate();
    makeRoomDropDownsEnabledIfValueNotNull();
    createReservation();
</script>
@*using form method="dialog" because post will not go into the success ajax callback function and will not redirect the user to the needed
    page, also, ajax doesn't work the traditional "post" way of sending the form information and then removing it from the form*@
<form method="dialog" id="myForm">
    <div>
        <input type="hidden" id="XSRFToken"
               name="XSRFToken" value="@httpContextAccessor.HttpContext.Request.Cookies["XSRF-TOKEN"]">
    </div>

    <label>
        Reservation Start Date
    </label>
    <div style="margin-bottom: 15px">
        <input type="datetime-local" name="reservationStartDate" id="reservationStartDate" class="startDate" required />
    </div>

    <label>
        Reservation End Date
    </label>
    <div style="margin-bottom: 15px">
        <input type="datetime-local" name="reservationEndDate" id="reservationEndDate" class="endDate" required />
    </div>

    <div style="margin-bottom: 15px">
        <select id="guestDropDownList" name="guestDropDownList" required>
            <option value="">Enter The Guest</option>
        </select>
    </div>

    <div style="margin-bottom: 15px">
        <select id="employeeDropDownList" name="employeeDropDownList" required>
            <option value="">Enter The Employee</option>
        </select>
    </div>

    <div style="margin-bottom: 15px">
        <select id="roomDropDownList" name="roomDropDownList" required>
            <option value="">Enter The Room</option>
        </select>
    </div>

    <div style="margin-bottom: 15px">
        <select id="secondRoomDropDownList" name="secondRoomDropDownList">
            <option value="">Enter The Room</option>
        </select>
    </div>

    <div style="margin-bottom: 15px">
        <select id="thirdRoomDropDownList" name="thirdRoomDropDownList">
            <option value="">Enter The Room</option>
        </select>
    </div>

    <div style="margin-bottom: 15px">
        <input type="submit" name="createReservation" value="Create A Reservation" id="btnReservationCreate" />
    </div>
</form>

<script>
    $('#myForm').validate();
</script>

<style>
    .error {
        color: red;
        font-family: verdana, Helvetica;
    }
</style>

<div>
    <a asp-action="Index">Back to List</a>
</div>
